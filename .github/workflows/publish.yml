---
# Based on https://github.com/nicolas-van/rust-cross-compile-example - Thanks!

name: Publish

on:
  release:
    types:
      - published
  workflow_dispatch:
  pull_request: # for testing
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    # necessary for windows
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # a list of all the targets
        include:
          - TARGET: x86_64-unknown-linux-gnu # tested in a debian container on a mac
            OS: ubuntu-latest

          - TARGET: aarch64-unknown-linux-gnu # tested on aws t4g.nano
            OS: ubuntu-latest

    runs-on: ${{ matrix.OS }}
    env:
      NAME: cfn-teleport
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: DEBUG
        run: |
          echo ${{ github.event_name }}
          echo GITHUB_REF_TYPE=$GITHUB_REF_TYPE
          echo GITHUB_SHA=$GITHUB_SHA
          printenv

      - name: Create files
        run: |
          mkdir -p ./artifacts
          echo test > "./artifacts/${NAME}-${TARGET}-${GITHUB_REF_NAME}.tar.gz"

      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: result
          path: |
            ./artifacts

      - name: Upload release artifacts
        run: |
          gh release upload "${GITHUB_REF_NAME}" "./artifacts/${NAME}-${TARGET}-${GITHUB_REF_NAME}.tar.gz"
        env:
          GH_TOKEN: ${{ secrets.OVERRIDE_TOKEN }}
