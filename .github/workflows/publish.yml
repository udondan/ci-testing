---
# Based on https://github.com/nicolas-van/rust-cross-compile-example - Thanks!

name: Publish

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      release:
        description: Name of the release
        required: true
  pull_request: # temporary, for testing
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    # necessary for windows
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # a list of all the targets
        include:
          - TARGET: x86_64-unknown-linux-gnu # tested in a debian container on a mac
            OS: ubuntu-latest

          # disabled, because ring package does not support musl
          #- TARGET: x86_64-unknown-linux-musl # test in an alpine container on a mac
          #  OS: ubuntu-latest

          - TARGET: aarch64-unknown-linux-gnu # tested on aws t4g.nano
            OS: ubuntu-latest

          # disabled, because ring package does not support musl
          #- TARGET: aarch64-unknown-linux-musl # tested on aws t4g.nano in alpine container
          #  OS: ubuntu-latest

          - TARGET: armv7-unknown-linux-gnueabihf # raspberry pi 2-3-4, not tested
            OS: ubuntu-latest

          # disabled, because ring package does not support musl
          #- TARGET: armv7-unknown-linux-musleabihf # raspberry pi 2-3-4, not tested
          #  OS: ubuntu-latest

          - TARGET: arm-unknown-linux-gnueabihf # raspberry pi 0-1, not tested
            OS: ubuntu-latest

          # disabled, because ring package does not support musl
          #- TARGET: arm-unknown-linux-musleabihf # raspberry pi 0-1, not tested
          #  OS: ubuntu-latest

          - TARGET: x86_64-apple-darwin # tested on a mac, is not properly signed so there are security warnings
            OS: macos-latest
          - TARGET: x86_64-pc-windows-msvc # tested on a windows machine
            OS: windows-latest

            # what about these?:
            # aarch64-apple-darwin,
            # i686-pc-windows-gnu,
            # i686-pc-windows-msvc,
            # i686-unknown-linux-gnu,
            # x86_64-pc-windows-gnu,

    runs-on: ${{ matrix.OS }}
    env:
      NAME: cfn-teleport
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
    steps:
      - name: Checkout code
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Checkout release code
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'workflow_dispatch' }}
        with:
          ref: ${{ github.event.inputs.changelog }}
          persist-credentials: false
          fetch-depth: 0

      - name: DEBUG
        run: |
          printenv

      - name: Create files
        run: |
          mkdir -p ./artifacts
          echo test > ./artifacts/$NAME-$TARGET-$TAG.tar.gz

      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: result
          path: |
            ./artifacts

      - name: Upload release artifacts
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            echo "Not a release, skipping"
            exit 0
          fi
          if [[ $GITHUB_REF_TYPE =~ ^tag$ ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$GITHUB_SHA
          fi
          gh release upload $TAG ./artifacts/$NAME-$TARGET-$TAG.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.OVERRIDE_TOKEN }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
